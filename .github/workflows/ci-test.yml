name: CI Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    name: pester
    strategy:
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    env:
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dotnet
        uses: actions/setup-dotnet@v4
        with:
          cache: true
          cache-dependency-path: '**/*.csproj'

      - name: Install PSResources
        run: ./tools/installPSResources.ps1
        shell: pwsh

      - name: Build
        run: ./build.ps1 -Configuration Release -All -Verbose
        shell: pwsh

      - name: Package
        run: ./build.ps1 -BuildNupkg -Verbose
        shell: pwsh

      - name: Test
        run: ./build.ps1 -Test -Verbose
        shell: pwsh

      - name: Test Windows PowerShell
        if: matrix.os == 'windows-latest'
        run: |
           Install-Module Pester -Scope CurrentUser -Force -SkipPublisherCheck
           ./build.ps1 -Test -Verbose
        shell: powershell

      - name: Download PowerShell install script
        uses: actions/checkout@v4
        with:
          repository: PowerShell/PowerShell
          path: pwsh
          sparse-checkout: tools/install-powershell.ps1
          sparse-checkout-cone-mode: false

      - name: Install preview
        continue-on-error: true
        run: ./pwsh/tools/install-powershell.ps1 -Preview -Destination ./preview
        shell: pwsh

      - name: Test preview
        run: |
          $PwshPreview = if ($isWindows) { "./preview/pwsh.exe" } else { "./preview/pwsh" }
          ./build.ps1 -Test -WithPowerShell:$PwshPreview -Verbose
        shell: pwsh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: PSScriptAnalyzer-package-${{ matrix.os }}
          path: out/**/*.nupkg

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: PSScriptAnalyzer-tests-${{ matrix.os }}
          path: testResults.xml
